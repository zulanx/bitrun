{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/populateHome.js",
			"settings":
			{
				"buffer_size": 3722,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAig4AAAAAAAAAAAAAig4AAAAAAACKDgAAAAAAADgMAAAvKiogQHBhcmFtIHtOU30gbnMgKiovCgpmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkgewoJY29uc3QgY2hpbGRyZW4gPSBucy5zY2FuKHNlcnZlcik7Cglmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikgewoJCWlmIChwYXJlbnQgPT0gY2hpbGQpIHsKCQkJY29udGludWU7CgkJfQoJCWxpc3QucHVzaChjaGlsZCk7CgoJCXNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpOwoJfQp9CmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHsKCWNvbnN0IHNMaXN0ID0gW107CglzY2FuKG5zLCAnJywgJ2hvbWUnLCBzTGlzdCk7Cgl2YXIgc1Byb3BzID0gW107Cglmb3IgKGxldCBpID0gMDsgaSA8IHNMaXN0Lmxlbmd0aDsgaSsrKSB7CgkJaWYgKHNMaXN0W2ldLnN1YnN0cmluZygwLCA2KSAhPT0gJ3BzZXJ2LScgJiYgbnMuZ2V0U2VydmVyTWF4TW9uZXkoc0xpc3RbaV0pICE9PSAwKSB7CgkJCXNQcm9wc1tpXSA9IFtzTGlzdFtpXSwKCQkJbnMuaGFzUm9vdEFjY2VzcyhzTGlzdFtpXSksCgkJCW5zLmdldFNlcnZlck51bVBvcnRzUmVxdWlyZWQoc0xpc3RbaV0pLAoJCQlucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzTGlzdFtpXSksCgkJCW5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc0xpc3RbaV0pLAoJCQlucy5nZXRTZXJ2ZXJNYXhNb25leShzTGlzdFtpXSksCgkJCW5zLmdldFNlcnZlckdyb3d0aChzTGlzdFtpXSldOwoJCX0KCX0KCS8vbnMudHByaW50KHNQcm9wcyk7CglyZXR1cm4gc1Byb3BzOwp9CgpleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykgewoKCXZhciBzY3JhcHQgPSAnZWFzeUhhY2suanMnOwoJdmFyIHRocmVhZEZhY3RvciA9IDEwMDsKCXZhciBzY3JpcHRSYW0gPSBucy5nZXRTY3JpcHRSYW0oc2NyYXB0KTsKCgl2YXIgc0xpc3QgPSBsaXN0X3NlcnZlcnMobnMpOwoJdmFyIGN1clNWUk5hbWUgPSAnJzsKCXZhciBjdXJTVlJSb290ID0gJyc7Cgl2YXIgY3VyU1ZSTWluSGFjayA9IDA7Cgl2YXIgY3VyU1ZSUG9ydHMgPSAwOwoJdmFyIGN1clNWUk1heE1vbmV5OwoJdmFyIGhvbWVSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oJ2hvbWUnKSAtIG5zLmdldFNlcnZlclVzZWRSYW0oJ2hvbWUnKSAtIDEwMDsKCQoJdmFyIHRhcmdldCA9ICcnOwoJdmFyIG1heFRocmVhZHMgPSAwOwoJdmFyIHRocmVhZHMgPSAwOwoJdmFyIHRocmVhZHNMZWZ0ID0gMDsKCXZhciB0aHJlYWRzU1ZSID0gMAoKCXZhciBoYWNrRGlmZiA9IDA7Cgl2YXIgaGFja0x2bCA9IG5zLmdldEhhY2tpbmdMZXZlbCgpOwoKCWF3YWl0IG5zLnNsZWVwKDEwMDApOwoJbWF4VGhyZWFkcyA9IE1hdGguZmxvb3IoKGhvbWVSYW0gLyBzY3JpcHRSYW0pKTsKCXRocmVhZHNMZWZ0ID0gbWF4VGhyZWFkczsKCWlmIChob21lUmFtIDwgKDEwMCAqIHNjcmlwdFJhbSkpIHsKCQlucy50cHJpbnQoYE5vdCBlbm91Z2ggcmFtIG9uIGhvbWUgbWFjaGluZSwgbWluOiAke3NjcmlwdFJhbSAqIDUwMH1gKQoJfSBlbHNlIHsKCgkJZm9yIChsZXQgaSA9IDA7IGkgPCBzTGlzdC5sZW5ndGg7IGkrKykgewoKCQkJaWYgKHNMaXN0W2ldICE9PSB1bmRlZmluZWQpIHsKCQkJCXZhciBjdXJTVlIgPSBzTGlzdFtpXTsKCgkJCQljdXJTVlJOYW1lID0gY3VyU1ZSWzBdOwoJCQkJY3VyU1ZSUm9vdCA9IGN1clNWUlsxXTsKCQkJCWN1clNWUlBvcnRzID0gY3VyU1ZSWzJdOwoJCQkJY3VyU1ZSTWluSGFjayA9IGN1clNWUlszXTsKCQkJCWN1clNWUk1heE1vbmV5ID0gY3VyU1ZSWzVdOwoKCQkJCWlmIChjdXJTVlJNaW5IYWNrIDw9IDIwMCkgeyBoYWNrRGlmZiA9IDIgfQoJCQkJZWxzZSBpZiAoY3VyU1ZSTWluSGFjayA8PSA1MDApIHsgaGFja0RpZmYgPSAzIH0KCQkJCWVsc2UgaWYgKGN1clNWUk1pbkhhY2sgPD0gNzUwKSB7IGhhY2tEaWZmID0gNCB9CgkJCQllbHNlIHsgaGFja0RpZmYgPSA1IH07CgkJCQl0YXJnZXQgPSBjdXJTVlJOYW1lOwoKCQkJCXRocmVhZHMgPSB0aHJlYWRGYWN0b3IgKiBoYWNrRGlmZjsKCgkJCQlpZiAoaGFja0x2bCA8IGN1clNWUk1pbkhhY2spIHsgY29udGludWUgfSBlbHNlIHsKCQkJCQlpZiAoY3VyU1ZSTWluSGFjayA8PSBoYWNrTHZsICYmIGN1clNWUlJvb3QgJiYgY3VyU1ZSTWF4TW9uZXkgPiAwKSB7CgkJCQkJCXRocmVhZHNMZWZ0ID0gTWF0aC5mbG9vcihtYXhUaHJlYWRzIC8gNzUpOwoJCQkJCQl0aHJlYWRzU1ZSID0gTWF0aC5jZWlsKHRocmVhZHNMZWZ0IC8gdGhyZWFkcyk7CgkJCQkJCWlmIChmYWxzZSkgewoJCQkJCQkJbnMudHByaW50KGAke2N1clNWUk5hbWV9ID0gSG9tZSBSYW06ICR7bnMuZ2V0U2VydmVyTWF4UmFtKCdob21lJyl9YCk7CgkJCQkJCQlucy50cHJpbnQoYCR7Y3VyU1ZSTmFtZX0gPSBVc2VkIFJhbTogJHtucy5nZXRTZXJ2ZXJVc2VkUmFtKCdob21lJyl9YCk7CgkJCQkJCQlucy50cHJpbnQoYCR7Y3VyU1ZSTmFtZX0gPSBNYXggUmFtOiAke2hvbWVSYW19IDo6IChtaW51cyByYW0gdXNlZCAtIDEwMClgKTsKCQkJCQkJCW5zLnRwcmludChgJHtjdXJTVlJOYW1lfSA9IFNjcmlwdDogICR7c2NyaXB0UmFtfWApOwoJCQkJCQkJbnMudHByaW50KGAke2N1clNWUk5hbWV9ID0gTWF4IFRocmVhZHM6ICR7bWF4VGhyZWFkc30gOjogJHttYXhUaHJlYWRzLzc1fWApOwoJCQkJCQkJbnMudHByaW50KGAke2N1clNWUk5hbWV9ID0gVGhyZWFkc0xlZnQ6ICR7dGhyZWFkc0xlZnR9YCk7CgkJCQkJCQlucy50cHJpbnQoYCR7Y3VyU1ZSTmFtZX0gPSBUaHJlYWRzOiAke3RocmVhZHN9YCk7CgkJCQkJCQlucy50cHJpbnQoYCR7Y3VyU1ZSTmFtZX0gPSBDZWlsaW5nOiAke3RocmVhZHNTVlJ9YCk7CgkJCQkJCQlyZXR1cm4gMDsKCQkJCQkJfQoKCQkJCQkJZm9yIChsZXQgeCA9IDA7IHggPCB0aHJlYWRzU1ZSOyB4KyspIHsKCQkJCQkJCWlmICh0aHJlYWRzID4gdGhyZWFkc0xlZnQpIHsgdGhyZWFkcyA9IHRocmVhZHNMZWZ0IH07CgkJCQkJCQlhd2FpdCBucy5ydW4oc2NyYXB0LCB0aHJlYWRzLCB0YXJnZXQsIHgpCgkJCQkJCQl0aHJlYWRzTGVmdCAtPSB0aHJlYWRzOwoJCQkJCQkJYXdhaXQgbnMuc2xlZXAoMTAwKTsKCQkJCQkJfQoKCgoJCQkJCX0KCQkJCX0KCQkJfQoKCgoKCgoJCX0KCX0KCW5zLnRwcmludChgRmluaXNoZWQgUG9wdWxhdGluZyBIb21lYCkKfQ",
					"AQAAAAAAAAABAAAAAAAAAAAAAAA4DAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/mainHack.js",
			"settings":
			{
				"buffer_size": 9371,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAACfIgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install packa",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/GitHub/bitrun/src"
	],
	"file_history":
	[
		"/D/GitHub/bitrun/src/findServer.js",
		"/D/GitHub/bitrun/src/easyHack.js",
		"/D/GitHub/bitrun/src/scanServers.js",
		"/D/GitHub/bitrun/src/mainHack.js",
		"/D/GitHub/bitrun/src/purchaseServer.js",
		"/D/GitHub/bitrun/src/superSendIT.js"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"target",
			"Target",
			"target",
			"find"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/populateHome.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3722,
						"regions":
						{
						},
						"selection":
						[
							[
								1608,
								1608
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/mainHack.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9371,
						"regions":
						{
						},
						"selection":
						[
							[
								9371,
								9371
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3272.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bitrun-sublime.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 265.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
